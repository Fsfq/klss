const form = document.getElementById('chat-form');
const messageInput = document.getElementById('message-input');
const messages = document.getElementById('messages');

form.addEventListener('submit', (e) => {
    e.preventDefault();

    const message = messageInput.value;
    if (message.trim() === '') return;

    const messageElement = document.createElement('div');
    messageElement.textContent = message;
    messages.appendChild(messageElement);

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∞—Å—Å–∞ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
    messageElement.classList.add('new-message');

    // –£–¥–∞–ª–µ–Ω–∏–µ –∫–ª–∞—Å—Å–∞ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
    setTimeout(() => {
        messageElement.classList.remove('new-message');
    }, 300);

    messageInput.value = '';
    messages.scrollTop = messages.scrollHeight;
});
// –î–æ–±–∞–≤–ª–µ–Ω —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
const clearButton = document.createElement('button');
clearButton.textContent = 'Clear Chat';
clearButton.style.marginTop = '10px';
clearButton.style.backgroundColor = '#ff1744';
clearButton.style.color = '#ffffff';
clearButton.style.border = 'none';
clearButton.style.padding = '0.5rem 1rem';
clearButton.style.cursor = 'pointer';
clearButton.style.borderRadius = '4px';

clearButton.addEventListener('click', () => {
    messages.innerHTML = '';
});

document.querySelector('.chat-container main').appendChild(clearButton);
// –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –≤–∫–ª–∞–¥–æ–∫
const chatTab = document.getElementById('chat-tab');
const mediaTab = document.getElementById('media-tab');
const settingsTab = document.getElementById('settings-tab');
const chatContainer = document.querySelector('.chat-container');
const mediaContainer = document.getElementById('media');
const settingsContainer = document.getElementById('settings');

chatTab.addEventListener('click', () => {
    chatContainer.classList.remove('hidden');
    mediaContainer.classList.add('hidden');
    settingsContainer.classList.add('hidden');
});

mediaTab.addEventListener('click', () => {
    chatContainer.classList.add('hidden');
    mediaContainer.classList.remove('hidden');
    settingsContainer.classList.add('hidden');
});

settingsTab.addEventListener('click', () => {
    chatContainer.classList.add('hidden');
    mediaContainer.classList.add('hidden');
    settingsContainer.classList.remove('hidden');
});

// –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–º—ã
const themeSelect = document.getElementById('theme-select');
themeSelect.addEventListener('change', (e) => {
    if (e.target.value === 'light') {
        document.body.style.backgroundColor = '#ffffff';
        document.body.style.color = '#000000';
    } else {
        document.body.style.backgroundColor = '#121212';
        document.body.style.color = '#ffffff';
    }
});
// –£–ª—É—á—à–µ–Ω–∏—è –∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –¥–ª—è —á–∞—Ç–∞

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
const STORAGE_KEY = 'chat_messages_v1';
const THEME_KEY = 'chat_theme_v1';

function uid() {
    return Date.now().toString(36) + Math.random().toString(36).slice(2, 9);
}

function formatTime(ts) {
    const d = new Date(ts);
    return d.toLocaleTimeString([], {hour: '2-digit', minute: '2-digit'});
}

function saveMessagesToStorage() {
    const items = Array.from(messages.children).map(el => ({
        id: el.dataset.id || null,
        text: el.querySelector('.message-text') ? el.querySelector('.message-text').innerText : el.innerText,
        time: el.dataset.time || Date.now()
    })).filter(Boolean);
    localStorage.setItem(STORAGE_KEY, JSON.stringify(items));
}

function loadMessagesFromStorage() {
    const raw = localStorage.getItem(STORAGE_KEY);
    if (!raw) return;
    try {
        const items = JSON.parse(raw);
        items.forEach(item => {
            const el = document.createElement('div');
            el.dataset.id = item.id || uid();
            el.dataset.time = item.time || Date.now();
            el.classList.add('restored-message');
            el.textContent = item.text;
            messages.appendChild(el);
        });
        // –ü—Ä–æ–∫—Ä—É—Ç–∏—Ç—å –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É
        messages.scrollTop = messages.scrollHeight;
    } catch (e) {
        console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è:', e);
    }
}

// –£–ª—É—á—à–µ–Ω–∏–µ –æ–¥–Ω–æ–≥–æ DOM-—ç–ª–µ–º–µ–Ω—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏, –∫–Ω–æ–ø–æ–∫, id
function enhanceMessageElement(el) {
    if (!(el instanceof HTMLElement)) return;
    if (el.dataset.enhanced === '1') return;
    el.dataset.enhanced = '1';
    // Ensure id/time
    if (!el.dataset.id) el.dataset.id = uid();
    if (!el.dataset.time) el.dataset.time = Date.now();

    // —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å—ã—Ä–æ–π —Ç–µ–∫—Å—Ç
    const rawText = el.textContent || '';

    // –û—á–∏—Å—Ç–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç –∏ –ø–æ—Å—Ç—Ä–æ–∏—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É
    el.innerHTML = '';
    el.classList.add('message-item');
    el.style.position = 'relative';
    el.style.padding = '0.4rem 0.6rem';
    el.style.margin = '0.35rem 0';
    el.style.borderRadius = '6px';
    el.style.background = 'rgba(255,255,255,0.03)';

    const textDiv = document.createElement('div');
    textDiv.className = 'message-text';
    textDiv.textContent = rawText;
    textDiv.style.whiteSpace = 'pre-wrap';
    el.appendChild(textDiv);

    const meta = document.createElement('div');
    meta.className = 'message-meta';
    meta.style.display = 'flex';
    meta.style.gap = '0.5rem';
    meta.style.alignItems = 'center';
    meta.style.marginTop = '0.25rem';
    meta.style.fontSize = '0.75rem';
    meta.style.opacity = '0.8';

    const timeSpan = document.createElement('span');
    timeSpan.className = 'message-time';
    timeSpan.textContent = formatTime(parseInt(el.dataset.time, 10));
    meta.appendChild(timeSpan);

    // actions container
    const actions = document.createElement('span');
    actions.style.marginLeft = 'auto';
    actions.style.display = 'inline-flex';
    actions.style.gap = '0.25rem';

    const copyBtn = document.createElement('button');
    copyBtn.type = 'button';
    copyBtn.title = 'Copy';
    copyBtn.textContent = 'üìã';
    copyBtn.style.cursor = 'pointer';
    copyBtn.style.border = 'none';
    copyBtn.style.background = 'transparent';
    copyBtn.style.padding = '0 0.25rem';

    const delBtn = document.createElement('button');
    delBtn.type = 'button';
    delBtn.title = 'Delete';
    delBtn.textContent = 'üóëÔ∏è';
    delBtn.style.cursor = 'pointer';
    delBtn.style.border = 'none';
    delBtn.style.background = 'transparent';
    delBtn.style.padding = '0 0.25rem';

    actions.appendChild(copyBtn);
    actions.appendChild(delBtn);
    meta.appendChild(actions);

    el.appendChild(meta);

    // Animations and handlers
    el.style.transition = 'opacity 220ms ease, transform 220ms ease';
    el.style.transform = 'translateY(0)';
    el.style.opacity = '1';

    copyBtn.addEventListener('click', async () => {
        try {
            await navigator.clipboard.writeText(textDiv.innerText);
            copyBtn.textContent = '‚úÖ';
            setTimeout(() => (copyBtn.textContent = 'üìã'), 900);
        } catch {
            copyBtn.textContent = '‚ùå';
            setTimeout(() => (copyBtn.textContent = 'üìã'), 900);
        }
    });

    delBtn.addEventListener('click', () => {
        // –ø–ª–∞–≤–Ω–æ —Å–∫—Ä—ã—Ç—å –∏ —É–¥–∞–ª–∏—Ç—å
        el.style.opacity = '0';
        el.style.transform = 'translateX(10px)';
        setTimeout(() => {
            if (el.parentElement) el.parentElement.removeChild(el);
            saveMessagesToStorage();
        }, 220);
    });
}

// –ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å –∑–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (—á—Ç–æ–±—ã "—É–ª—É—á—à–∏—Ç—å" –∏—Ö)
const observer = new MutationObserver(muts => {
    muts.forEach(m => {
        m.addedNodes.forEach(n => {
            if (n.nodeType !== 1) return;
            enhanceMessageElement(n);
        });
    });
    // –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ—Å–ª–µ –Ω–µ–±–æ–ª—å—à–æ–≥–æ —Ç–∞–π–º–∞—É—Ç–∞ (–≥—Ä—É–ø–ø–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è)
    clearTimeout(observer._saveTimeout);
    observer._saveTimeout = setTimeout(saveMessagesToStorage, 150);
});
observer.observe(messages, {childList: true});

// –ü–æ–¥–≥—Ä—É–∑–∏—Ç—å —Ä–∞–Ω–µ–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –ø—Ä–∏–º–µ–Ω–∏—Ç—å enhancement
loadMessagesFromStorage();
Array.from(messages.children).forEach(el => enhanceMessageElement(el));
saveMessagesToStorage();

// –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—á–∏—Å—Ç–∫–∏: —Å–ø—Ä–æ—Å–∏—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
if (typeof clearButton !== 'undefined') {
    clearButton.addEventListener('click', (e) => {
        // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ—Å—Ç–æ —á–∏—Å—Ç—è—Ç DOM –±–µ–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
        e.preventDefault();
        e.stopImmediatePropagation && e.stopImmediatePropagation();

        if (!confirm('–£–¥–∞–ª–∏—Ç—å –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.')) return;
        messages.querySelectorAll('.message-item').forEach(el => {
            el.style.opacity = '0';
            el.style.transform = 'translateY(-6px)';
        });
        setTimeout(() => {
            messages.innerHTML = '';
            saveMessagesToStorage();
        }, 220);
    }, true);
}

// –ï—Å–ª–∏ —Ñ–æ—Ä–º–∞/–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∫–æ–¥–∞ –¥–æ–±–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ,
// –º—ã —Ö–æ—Ç–∏–º, —á—Ç–æ–±—ã –æ–Ω–æ —Ç–∞–∫–∂–µ —Å–æ—Ö—Ä–∞–Ω—è–ª–æ—Å—å –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–ª–æ—Å—å. –ù–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±—É–¥—É—Ç
// –ø–æ–¥—Ö–≤–∞—á–µ–Ω—ã MutationObserver'–æ–º. –ù–æ —á—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –º–≥–Ω–æ–≤–µ–Ω–Ω–æ, —Å–ª—É—à–∞–µ–º submit —Ç–æ–∂–µ.
form.addEventListener('submit', () => {
    // –û—Ç–∫–ª–∞–¥—ã–≤–∞–µ–º —á—Ç–æ–±—ã MutationObserver —É—Å–ø–µ–ª —Å–æ–∑–¥–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç
    setTimeout(() => {
        Array.from(messages.children).forEach(el => enhanceMessageElement(el));
        saveMessagesToStorage();
        messages.scrollTop = messages.scrollHeight;
    }, 40);
});

// –ü–æ–¥–¥–µ—Ä–∂–∫–∞ Enter –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏ Shift+Enter –¥–ª—è –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏ (–µ—Å–ª–∏ textarea)
messageInput.addEventListener('keydown', (e) => {
    if (e.key === 'Enter' && !e.shiftKey) {
        // –ï—Å–ª–∏ input (–Ω–µ textarea), –ø—Ä–æ—Å—Ç–æ —Å–∞–±–º–∏—Ç —Ñ–æ—Ä–º—ã ‚Äî —Ñ–æ—Ä–º–∞ —É–∂–µ —Å–ª—É—à–∞–µ—Ç—Å—è
        const tag = e.target.tagName.toLowerCase();
        if (tag === 'textarea' || tag === 'input') {
            e.preventDefault();
            form.requestSubmit?.() || form.dispatchEvent(new Event('submit', {cancelable: true}));
        }
    }
});

// –ö–ª–∞–≤–∏—à–∏ –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
document.addEventListener('keydown', (e) => {
    if ((e.ctrlKey || e.metaKey) && e.key.toLowerCase() === 'k') {
        e.preventDefault();
        messageInput.focus();
        messageInput.select?.();
    }
});

// –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ: –º–∞–∫—Å —Å–∏–º–≤–æ–ª–æ–≤ –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
messageInput.addEventListener('input', (e) => {
    const MAX = 5000;
    if (e.target.value.length > MAX) {
        e.target.value = e.target.value.slice(0, MAX);
        // –ù–µ–±–æ–ª—å—à–æ–π –≤–∏–∑—É–∞–ª—å–Ω—ã–π —Ñ–∏–¥–±–µ–∫
        e.target.style.borderColor = '#ff1744';
        setTimeout(() => e.target.style.borderColor = '', 600);
    }
});

// –≠–∫—Å–ø–æ—Ä—Ç/–∏–º–ø–æ—Ä—Ç —á–∞—Ç–∞
const toolsWrap = document.createElement('div');
toolsWrap.style.display = 'flex';
toolsWrap.style.gap = '0.5rem';
toolsWrap.style.marginTop = '10px';

const exportBtn = document.createElement('button');
exportBtn.type = 'button';
exportBtn.textContent = 'Export';
exportBtn.style.padding = '0.4rem 0.6rem';

const importBtn = document.createElement('button');
importBtn.type = 'button';
importBtn.textContent = 'Import';
importBtn.style.padding = '0.4rem 0.6rem';

toolsWrap.appendChild(exportBtn);
toolsWrap.appendChild(importBtn);

document.querySelector('.chat-container main').appendChild(toolsWrap);

exportBtn.addEventListener('click', () => {
    const data = localStorage.getItem(STORAGE_KEY) || '[]';
    const blob = new Blob([data], {type: 'application/json;charset=utf-8'});
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `chat-export-${new Date().toISOString()}.json`;
    document.body.appendChild(a);
    a.click();
    a.remove();
    URL.revokeObjectURL(url);
});

importBtn.addEventListener('click', () => {
    const txt = prompt('–í—Å—Ç–∞–≤—å—Ç–µ JSON –∏ –Ω–∞–∂–º–∏—Ç–µ OK (–ø–µ—Ä–µ–∑–∞–ø–∏—à–µ—Ç —Ç–µ–∫—É—â–∏–π —á–∞—Ç):');
    if (!txt) return;
    try {
        const parsed = JSON.parse(txt);
        if (!Array.isArray(parsed)) throw new Error('–û–∂–∏–¥–∞–ª—Å—è –º–∞—Å—Å–∏–≤ —Å–æ–æ–±—â–µ–Ω–∏–π');
        // –û—á–∏—Å—Ç–∏—Ç—å –∏ –∑–∞–≥—Ä—É–∑–∏—Ç—å
        messages.innerHTML = '';
        parsed.forEach(item => {
            const el = document.createElement('div');
            el.dataset.id = item.id || uid();
            el.dataset.time = item.time || Date.now();
            el.textContent = item.text || '';
            messages.appendChild(el);
        });
        Array.from(messages.children).forEach(el => enhanceMessageElement(el));
        saveMessagesToStorage();
    } catch (err) {
        alert('–ù–µ —É–¥–∞–ª–æ—Å—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å: ' + err.message);
    }
});

// –¢–µ–º–∞: –ø—Ä–∏–º–µ–Ω–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—É—é —Ç–µ–º—É –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –≤—ã–±–æ—Ä
function applyTheme(name) {
    if (name === 'light') {
        document.body.style.backgroundColor = '#ffffff';
        document.body.style.color = '#000000';
    } else {
        document.body.style.backgroundColor = '#121212';
        document.body.style.color = '#ffffff';
    }
    localStorage.setItem(THEME_KEY, name);
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ–º—ã –∏–∑ storage
const savedTheme = localStorage.getItem(THEME_KEY);
if (savedTheme) {
    applyTheme(savedTheme);
    if (themeSelect) themeSelect.value = savedTheme;
}

// –°–ª—É—à–∞—Ç–µ–ª—å –¥–ª—è —Å–µ–ª–µ–∫—Ç–∞ —Ç–µ–º—ã ‚Äî —Ä–∞—Å—à–∏—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π (–µ—Å–ª–∏ –µ—Å—Ç—å)
if (themeSelect) {
    themeSelect.addEventListener('change', (e) => {
        applyTheme(e.target.value);
    });
}

// –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ (—á—Ç–æ–±—ã –Ω–µ —Ä–∞—Å—Ç–∏ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ)
function enforceMessageLimit(limit = 500) {
    const items = JSON.parse(localStorage.getItem(STORAGE_KEY) || '[]');
    if (items.length <= limit) return;
    const trimmed = items.slice(-limit);
    localStorage.setItem(STORAGE_KEY, JSON.stringify(trimmed));
}
setInterval(() => {
    enforceMessageLimit(800);
}, 30_000);

// –ù–µ–±–æ–ª—å—à–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—è: –ø–µ—Ä–µ–¥ –≤—ã–≥—Ä—É–∑–∫–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
window.addEventListener('beforeunload', () => {
    saveMessagesToStorage();
});